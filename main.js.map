{"version":3,"sources":["app.js"],"names":["CSSFlags","init","$searchInput","$","client","algoliasearch","helper","algoliasearchHelper","on","updateQuery","updateResults","query","val","setQuery","search","results","flags","_","map","hits","hit","name","_highlightResult","value","code","hide","each","flag","flagNode","parent","closest","hasClass","find","html","show"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,IAAIA,WAAW;AACbC,MADa,kBACN;AACL,SAAKC,YAAL,GAAoBC,EAAE,kBAAF,CAApB;AACA,SAAKC,MAAL,GAAcC,cAAc,YAAd,EAA4B,kCAA5B,CAAd;AACA,SAAKC,MAAL,GAAcC,oBAAoB,KAAKH,MAAzB,EAAiC,UAAjC,CAAd;;AAEA,SAAKF,YAAL,CAAkBM,EAAlB,CAAqB,OAArB,EAA8B,KAAKC,WAAnC;AACA,SAAKH,MAAL,CAAYE,EAAZ,CAAe,QAAf,EAAyB,KAAKE,aAA9B;AACD,GARY;AASbD,aATa,yBASC;AACZ,QAAIE,QAAQR,EAAEH,SAASE,YAAX,EAAyBU,GAAzB,EAAZ;AACAZ,aAASM,MAAT,CAAgBO,QAAhB,CAAyBF,KAAzB,EAAgCG,MAAhC;AACD,GAZY;AAabJ,eAba,yBAaCK,OAbD,EAaU;AACrB,QAAIC,QAAQC,EAAEC,GAAF,CAAMH,QAAQI,IAAd,EAAoB,UAACC,GAAD,EAAS;AACvC,UAAIC,OAAOD,IAAIC,IAAf;AACA,UAAID,IAAIE,gBAAJ,CAAqBD,IAAzB,EAA+B;AAC7BA,eAAOD,IAAIE,gBAAJ,CAAqBD,IAArB,CAA0BE,KAAjC;AACD;;AAED,aAAO;AACLC,cAAMJ,IAAII,IADL;AAELH;AAFK,OAAP;AAID,KAVW,CAAZ;;AAYA;AACAlB,MAAE,mBAAF,EAAuBsB,IAAvB;;AAEAR,MAAES,IAAF,CAAOV,KAAP,EAAc,UAACW,IAAD,EAAU;AACtB,UAAIC,WAAWzB,gBAAcwB,KAAKH,IAAnB,CAAf;AACA,UAAIK,SAASD,SAASE,OAAT,CAAiB,mBAAjB,CAAb;AACA,UAAID,OAAOE,QAAP,CAAgB,wBAAhB,KAA6CF,OAAOE,QAAP,CAAgB,2BAAhB,CAAjD,EAA+F;AAC7F;AACD;AACDF,aAAOG,IAAP,CAAY,mBAAZ,EAAiCC,IAAjC,CAAsCN,KAAKN,IAA3C;AACAQ,aAAOK,IAAP;AACD,KARD;AASD;AAtCY,CAAf;;kBA2CelC,Q","file":"public/main.js","sourcesContent":["/* globals algoliasearch, algoliasearchHelper, $, _ */\nlet CSSFlags = {\n  init() {\n    this.$searchInput = $('#searchbar-input');\n    this.client = algoliasearch('O3F8QXYK6R', '3253f339ecaf4ff23f0afe8ad2ae655a');\n    this.helper = algoliasearchHelper(this.client, 'cssflags');\n\n    this.$searchInput.on('keyup', this.updateQuery);\n    this.helper.on('result', this.updateResults);\n  },\n  updateQuery() {\n    let query = $(CSSFlags.$searchInput).val();\n    CSSFlags.helper.setQuery(query).search();\n  },\n  updateResults(results) {\n    let flags = _.map(results.hits, (hit) => {\n      let name = hit.name;\n      if (hit._highlightResult.name) {\n        name = hit._highlightResult.name.value;\n      }\n\n      return {\n        code: hit.code,\n        name\n      };\n    });\n\n    // Hide them all\n    $('.c-flaglist--item').hide();\n\n    _.each(flags, (flag) => {\n      let flagNode = $(`.c-flag__${flag.code}`);\n      let parent = flagNode.closest('.c-flaglist--item');\n      if (parent.hasClass('c-flaglist--name__hard') || parent.hasClass('c-flaglist--item__unknown')) {\n        return;\n      }\n      parent.find('.c-flaglist--name').html(flag.name);\n      parent.show();\n    });\n  }\n\n\n};\n\nexport default CSSFlags;\n"]}