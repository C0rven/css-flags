{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAI,WAAW;AACb,MADa,kBACN;AACL,SAAK,YAAL,GAAoB,EAAE,kBAAF,CAApB;AACA,SAAK,MAAL,GAAc,cAAc,YAAd,EAA4B,kCAA5B,CAAd;AACA,SAAK,MAAL,GAAc,oBAAoB,KAAK,MAAzB,EAAiC,UAAjC,CAAd;;AAEA,SAAK,YAAL,CAAkB,EAAlB,CAAqB,OAArB,EAA8B,KAAK,WAAnC;AACA,SAAK,MAAL,CAAY,EAAZ,CAAe,QAAf,EAAyB,KAAK,aAA9B;AACD,GARY;AASb,aATa,yBASC;AACZ,QAAI,QAAQ,EAAE,SAAS,YAAX,EAAyB,GAAzB,EAAZ;AACA,aAAS,MAAT,CAAgB,QAAhB,CAAyB,KAAzB,EAAgC,MAAhC;AACD,GAZY;AAab,eAba,yBAaC,OAbD,EAaU;AACrB,QAAI,QAAQ,EAAE,GAAF,CAAM,QAAQ,IAAd,EAAoB,UAAC,GAAD,EAAS;AACvC,UAAI,OAAO,IAAI,IAAf;AACA,UAAI,IAAI,gBAAJ,CAAqB,IAAzB,EAA+B;AAC7B,eAAO,IAAI,gBAAJ,CAAqB,IAArB,CAA0B,KAAjC;AACD;;AAED,aAAO;AACL,cAAM,IAAI,IADL;AAEL;AAFK,OAAP;AAID,KAVW,CAAZ;;;AAaA,MAAE,mBAAF,EAAuB,IAAvB;;AAEA,MAAE,IAAF,CAAO,KAAP,EAAc,UAAC,IAAD,EAAU;AACtB,UAAI,WAAW,gBAAc,KAAK,IAAnB,CAAf;AACA,UAAI,SAAS,SAAS,OAAT,CAAiB,mBAAjB,CAAb;AACA,UAAI,OAAO,QAAP,CAAgB,wBAAhB,KAA6C,OAAO,QAAP,CAAgB,2BAAhB,CAAjD,EAA+F;AAC7F;AACD;AACD,aAAO,IAAP,CAAY,mBAAZ,EAAiC,IAAjC,CAAsC,KAAK,IAA3C;AACA,aAAO,IAAP;AACD,KARD;AASD;AAtCY,CAAf;;kBAyCe,Q","file":"public/main.js","sourcesContent":["/* globals algoliasearch, algoliasearchHelper, $, _ */\nlet CSSFlags = {\n  init() {\n    this.$searchInput = $('#searchbar-input');\n    this.client = algoliasearch('O3F8QXYK6R', '3253f339ecaf4ff23f0afe8ad2ae655a');\n    this.helper = algoliasearchHelper(this.client, 'cssflags');\n\n    this.$searchInput.on('keyup', this.updateQuery);\n    this.helper.on('result', this.updateResults);\n  },\n  updateQuery() {\n    let query = $(CSSFlags.$searchInput).val();\n    CSSFlags.helper.setQuery(query).search();\n  },\n  updateResults(results) {\n    let flags = _.map(results.hits, (hit) => {\n      let name = hit.name;\n      if (hit._highlightResult.name) {\n        name = hit._highlightResult.name.value;\n      }\n\n      return {\n        code: hit.code,\n        name\n      };\n    });\n\n    // Hide them all\n    $('.c-flaglist--item').hide();\n\n    _.each(flags, (flag) => {\n      let flagNode = $(`.c-flag__${flag.code}`);\n      let parent = flagNode.closest('.c-flaglist--item');\n      if (parent.hasClass('c-flaglist--name__hard') || parent.hasClass('c-flaglist--item__unknown')) {\n        return;\n      }\n      parent.find('.c-flaglist--name').html(flag.name);\n      parent.show();\n    });\n  }\n};\n\nexport default CSSFlags;\n"]}