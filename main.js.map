{"version":3,"sources":["app.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAI,QAAQ,GAAG;AACb,MAAI,kBAAG;AACL,QAAI,CAAC,YAAY,GAAG,CAAC,CAAC,kBAAkB,CAAC,CAAC;AAC1C,QAAI,CAAC,MAAM,GAAG,aAAa,CAAC,YAAY,EAAE,kCAAkC,CAAC,CAAC;AAC9E,QAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;;AAE3D,QAAI,CAAC,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AAChD,QAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;GAC9C;AACD,aAAW,yBAAG;AACZ,QAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;AAC3C,YAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;GAC1C;AACD,eAAa,yBAAC,OAAO,EAAE;AACrB,QAAI,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,UAAC,GAAG,EAAK;AACvC,UAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,UAAI,GAAG,CAAC,gBAAgB,CAAC,IAAI,EAAE;AAC7B,YAAI,GAAG,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;OACxC;;AAED,aAAO;AACL,YAAI,EAAE,GAAG,CAAC,IAAI;AACd,YAAI,EAAJ,IAAI;OACL,CAAC;KACH,CAAC;;;AAGF,KAAC,CAAC,mBAAmB,CAAC,CAAC,IAAI,EAAE,CAAC;;AAE9B,KAAC,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI,EAAK;AACtB,UAAI,QAAQ,GAAG,CAAC,eAAa,IAAI,CAAC,IAAI,CAAG,CAAC;AAC1C,UAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AACnD,UAAI,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,2BAA2B,CAAC,EAAE;AAC7F,eAAO;OACR;AACD,YAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,YAAM,CAAC,IAAI,EAAE,CAAC;KACf,CAAC,CAAC;GACJ;CACF,CAAC;;kBAEa,QAAQ","file":"public/main.js","sourcesContent":["/* globals algoliasearch, algoliasearchHelper, $, _ */\nlet CSSFlags = {\n  init() {\n    this.$searchInput = $('#searchbar-input');\n    this.client = algoliasearch('O3F8QXYK6R', '3253f339ecaf4ff23f0afe8ad2ae655a');\n    this.helper = algoliasearchHelper(this.client, 'cssflags');\n\n    this.$searchInput.on('keyup', this.updateQuery);\n    this.helper.on('result', this.updateResults);\n  },\n  updateQuery() {\n    let query = $(CSSFlags.$searchInput).val();\n    CSSFlags.helper.setQuery(query).search();\n  },\n  updateResults(results) {\n    let flags = _.map(results.hits, (hit) => {\n      let name = hit.name;\n      if (hit._highlightResult.name) {\n        name = hit._highlightResult.name.value;\n      }\n\n      return {\n        code: hit.code,\n        name\n      };\n    });\n\n    // Hide them all\n    $('.c-flaglist--item').hide();\n\n    _.each(flags, (flag) => {\n      let flagNode = $(`.c-flag__${flag.code}`);\n      let parent = flagNode.closest('.c-flaglist--item');\n      if (parent.hasClass('c-flaglist--name__hard') || parent.hasClass('c-flaglist--item__unknown')) {\n        return;\n      }\n      parent.find('.c-flaglist--name').html(flag.name);\n      parent.show();\n    });\n  }\n};\n\nexport default CSSFlags;\n"]}