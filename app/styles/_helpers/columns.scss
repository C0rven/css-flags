// Create several columns of various width
// @args[0]: Color of the first column
// @args[1]: width of the first column
// @args[2]: Color of the second column
// @args[3]: width of the second column
// ...
// @args[(n-1)*2]: Color of the nth column
// @args[(n-1)*2 + 1]: Width of the nth column
@function columns($args...) {
  // Default values
  $start:0;
  $end: 0;
  $result: ();
  @for $i from 1 to length($args) + 1 {
    // Only interested in even numbers
    @if ($i % 2 == 0) {
      $color: nth($args, $i - 1);
      $width: nth($args, $i);
      $end: round($start + $width);
      $result: append($result, $color $start, comma);
      $result: append($result, $color $end, comma);
      $start: $end;
    }
  }
  @return linear-gradient(90deg, $result);
}
@mixin columns($args...) {
  background-image: columns($args...);
}


// Two columns of equal width
// @args top: Color of top column
// @args bottom: Color of bottom column
@function two-columns($top, $bottom) {
  @return columns($top, $w2, $bottom, $w2);
}
@mixin two-columns($top, $bottom) {
  background-image: two-columns($top, $bottom);
}

// Three columns of equal width
// @args top: Color of top column
// @args center: Color of center column
// @args bottom: Color of bottom column
@function three-columns($top, $center, $bottom) {
  @return columns($top, $w3, $center, $w3, $bottom, $w3);
}
@mixin three-columns($top, $center, $bottom) {
  background-image: three-columns($top, $center, $bottom);
}
